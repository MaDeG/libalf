
(priority ordered)




- CPU/MEM stats for biermann

- documentation (?)

- add (de)serialize to NL*

- add normalizer to NL*

- add undo to NL*

- check increase_alphabet_size() in NL*

- check undo and increase_alphabet_size() in angluin

- RPNI algorithm

- BL* algorithm

- check network/deserialization code for bugs (or make dispatcher obsolete)

- check idea of assistants in knowledgebase
  [ problem: when algorithm works with pointers, either the non-normalized does not have
    a pointer or we need to add it each time something is requested. even for bottom... ]

- implement `extend normalizer' in dispatcher and normalizer




- in AMoRE++: _init and _fini are not working (linker stuff...)




- check if template can be removed from learning_algorithm
  (thus all alg. are of class learning_algorithm<bool>)
  [ possibly not due to BL* ]

- knowledgebase also without undo/timestamps, to reduce memory footprint

- efficient L* algorithm (tree-like)

- in learn_regex: check/fix '+' operator in regex on command-line

- enable dispatcher to listen on multiple address/port combinations, IPv6 and unix domain sockets


